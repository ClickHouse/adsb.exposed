CREATE TABLE dns
(
    time DateTime DEFAULT now(),
    json String
)
ENGINE = MergeTree
ORDER BY ();


clickhouse-local --query "
  WITH number DIV 65536 AS a, number DIV 256 MOD 256 AS b, number MOD 256 AS c
  SELECT c::String || '.' || b::String || '.' || a::String
  FROM numbers(16777216)
  WHERE (a > 0 AND a < 127 AND a != 10)
     OR (a >= 128 AND a < 192 AND (a != 172 OR b < 16 OR b > 31) AND (a != 169 AND b != 254))
     OR (a >= 192 AND a < 224 AND (a != 192 OR b != 168))
  ORDER BY sipHash64(number)
" | xargs -P1000 -I{} bash -c "
  seq 0 255 | sed -r -e 's@(.*)@--next --http2 -H \"accept: application/dns-json\" \"https://cloudflare-dns.com/dns-query?name=\\1.{}.in-addr.arpa\\&type=PTR\"@' | tr '\n' ' ' | sed 's/--next/curl -sS/' | bash > {}.json
  echo {}
  clickhouse-client --host driel7jwie.eu-west-1.aws.clickhouse-staging.com --secure --password 'ZPZ7gc_UO3aKQ' --query 'INSERT INTO dns (json) FORMAT JSONAsString' < {}.json && rm {}.json"


CREATE TABLE dns_parsed ENGINE = MergeTree ORDER BY ip
EMPTY AS

WITH JSONExtract(json,
'Tuple(
    Status UInt8,
    TC Bool,
    RD Bool,
    RA Bool,
    AD Bool,
    CD Bool,
    Question Array(Tuple(
        name String
    )),
    Answer Array(Tuple(
        name String,
        type UInt8,
        TTL UInt32,
        data String
    )),
    Authority Array(Tuple(
        name String,
        type UInt8,
        TTL UInt32,
        data String
    )),
    Comment Array(String))') AS t

SELECT time, t.Status, t.TC, t.RD, t.RA, t.AD, t.CD,
toIPv4(reinterpretAsUInt32(reverse(reinterpretAsFixedString(IPv4StringToNum(extract(tupleElement(t.Question[1], 'name'), '^(\d+\.\d+\.\d+\.\d+)\.')))))) AS ip,
replaceRegexpOne(tupleElement(t.Answer[1], 'data'), '\.$', '') AS domain
FROM dns
WHERE notEmpty(t.Answer)
SETTINGS allow_experimental_analyzer = 1;


INSERT INTO dns_parsed
WITH JSONExtract(json,
'Tuple(
    Status UInt8,
    TC Bool,
    RD Bool,
    RA Bool,
    AD Bool,
    CD Bool,
    Question Array(Tuple(
        name String
    )),
    Answer Array(Tuple(
        name String,
        type UInt8,
        TTL UInt32,
        data String
    )),
    Authority Array(Tuple(
        name String,
        type UInt8,
        TTL UInt32,
        data String
    )),
    Comment Array(String))') AS t

SELECT time, t.Status, t.TC, t.RD, t.RA, t.AD, t.CD,
toIPv4(reinterpretAsUInt32(reverse(reinterpretAsFixedString(IPv4StringToNum(extract(tupleElement(t.Question[1], 'name'), '^(\d+\.\d+\.\d+\.\d+)\.')))))) AS ip,
replaceRegexpOne(tupleElement(t.Answer[1], 'data'), '\.$', '') AS domain
FROM dns
WHERE notEmpty(t.Answer)
SETTINGS allow_experimental_analyzer = 1;
